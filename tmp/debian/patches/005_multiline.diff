From bb1827f166f49f35eb10244b2a0368b034f1622c Mon Sep 17 00:00:00 2001
From: Roger Burton West <teerooco@ephemeral.firedrake.org>
Date: Tue, 7 Jan 2014 01:55:43 +0000
Subject: Use /m instead of $* (removed in Perl 5.10)

Author: Colin Watson <cjwatson@debian.org>
Bug-Debian: http://bugs.debian.org/558799
Forwarded: no
Last-Update: 2011-05-30

Patch-Name: 005_multiline.diff
---
 perllib/sdf/subs.pl    | 18 ++----------------
 perllib/sdf/tohtml.pl  | 14 --------------
 perllib/sdf/tolatex.pl |  8 --------
 perllib/sdf/tomif.pl   | 30 +++++-------------------------
 perllib/sdf/topod.pl   |  8 --------
 perllib/sdf/tosgml.pl  | 16 ----------------
 6 files changed, 7 insertions(+), 87 deletions(-)

diff --git a/perllib/sdf/subs.pl b/perllib/sdf/subs.pl
index 3c37ef9..2d155e6 100644
--- a/perllib/sdf/subs.pl
+++ b/perllib/sdf/subs.pl
@@ -620,10 +620,6 @@ sub ExecEventsStyleMask {
     local($event, $action, $mask);
     local($old_match_rule);
 
-    # Ensure multi-line matching is enabled
-    $old_match_rule = $*;
-    $* = 1;
-
     for ($event = $#code; $event >= 0; $event--) {
 
         # get the action to execute, if any
@@ -632,7 +628,7 @@ sub ExecEventsStyleMask {
 
         # Mask out events
         $mask = $mask[$event];
-        next if $mask ne '' && $style !~ /^$mask$/;
+        next if $mask ne '' && $style !~ /^$mask$/m;
         return if $attr{'noevents'};
 
         # execute the action
@@ -640,8 +636,6 @@ sub ExecEventsStyleMask {
         &'AppMsg("warning", "execution of '$action' failed: $@") if $@;
     }
 
-    # Restore the multi-line match flag setting
-    $* = $old_match_rule;
 }
 
 #
@@ -654,11 +648,6 @@ sub ExecEventsNameMask {
     local(*code, *mask) = @_;
 #   local();
     local($event, $action, $mask);
-    local($old_match_rule);
-
-    # Ensure multi-line matching is enabled
-    $old_match_rule = $*;
-    $* = 1;
 
     for ($event = $#code; $event >= 0; $event--) {
 
@@ -668,15 +657,12 @@ sub ExecEventsNameMask {
 
         # Mask out events
         $mask = $mask[$event];
-        next if $mask ne '' && $name !~ /^$mask$/;
+        next if $mask ne '' && $name !~ /^$mask$/m;
 
         # execute the action
         eval $action;
         &'AppMsg("warning", "execution of '$action' failed: $@") if $@;
     }
-
-    # Restore the multi-line match flag setting
-    $* = $old_match_rule;
 }
 #
 # >>Description::
diff --git a/perllib/sdf/tohtml.pl b/perllib/sdf/tohtml.pl
index 3553c5e..42e1c83 100644
--- a/perllib/sdf/tohtml.pl
+++ b/perllib/sdf/tohtml.pl
@@ -840,19 +840,12 @@ sub _HtmlEscape {
 #   local($result);
     local($old_match_flag);
 
-    # Enable multi-line matching
-    $old_match_flag = $*;
-    $* = 1;
-
     # Escape the symbols
     $text =~ s/\&/&amp;/g;
     $text =~ s/\</&lt;/g;
     $text =~ s/\>/&gt;/g;
     $text =~ s/\"/&quot;/g;
 
-    # Reset multi-line matching flag
-    $* = $old_match_flag;
-
     # Return result
     $text;
 }
@@ -980,10 +973,6 @@ sub _HtmlAddAnchors {
     local($user_ext);
     local($old_match_flag);
 
-    # Enable multi-line matching
-    $old_match_flag = $*;
-    $* = 1;
-
     # For hypertext jumps, surround the text. If the
     # text contains a jump, the existing jump is removed.
     if ($attr{'jump'} ne '') {
@@ -1019,9 +1008,6 @@ sub _HtmlAddAnchors {
         $result++;
     }
 
-    # Reset multi-line matching flag
-    $* = $old_match_flag;
-
     # Return result
     return $result;
 }
diff --git a/perllib/sdf/tolatex.pl b/perllib/sdf/tolatex.pl
index d1c8650..49d190d 100755
--- a/perllib/sdf/tolatex.pl
+++ b/perllib/sdf/tolatex.pl
@@ -1040,11 +1040,6 @@ sub _LatexFinalise {
 sub _LatexEscape {
     local($text) = @_;
 #   local($result);
-    local($old_match_flag);
-
-    # Enable multi-line matching
-    $old_match_flag = $*;
-    $* = 1;
 
     # Escape the special symbols. Note that it isn't exactly clear
     # from the SGML-Tools and/or QWERTZ DTD documentation as to
@@ -1067,9 +1062,6 @@ sub _LatexEscape {
     $text =~ s/\{/\\\{/g;
     $text =~ s/\}/\\\}/g;
 
-    # Reset multi-line matching flag
-    $* = $old_match_flag;
-
     # Return result
     $text;
 }
diff --git a/perllib/sdf/tomif.pl b/perllib/sdf/tomif.pl
index f60a670..968bedb 100755
--- a/perllib/sdf/tomif.pl
+++ b/perllib/sdf/tomif.pl
@@ -668,16 +668,12 @@ sub _MifAddSection {
 sub _MifEscape {
     local(*text, $escape_space) = @_;
 #   local();
-    local($orig_linematch_flag);
 
-    $orig_linematch_flag = $*;
-    $* = 1;
     $text =~ s/([\\>])/\\$1/g;
     $text =~ s/\t/\\t/g;
     $text =~ s/'/\\q/g;
     $text =~ s/`/\\Q/g;
     $text =~ s/ /\\ /g if $escape_space;
-    $* = $orig_linematch_flag;
 }
 
 #
@@ -2021,7 +2017,7 @@ sub _MifFinalise {
     local(@out_result);
     local($pwidth, $pheight);
     local($component_prefix);
-    local(%offset, $old_match_rule);
+    local(%offset);
     local(%merged_ctrls, %merged_vars, %merged_xrefs);
     local(%merged_paras, %merged_fonts, %merged_tbls);
     local($mainflow);
@@ -2136,12 +2132,9 @@ $igc_start = time;
         "<Notes ",
         "> # end of Notes",
         @text);
-    $old_match_rule = $*;
-    $* = 1;
     $mainflow =~ s/\<ParaLine/$&\n  <TextRectID $_MIF_TEXTFLOW_MAIN>/;
     $mainflow =~ s/\n/\n /g;
     $mainflow .= "\n> # end of TextFlow";
-    $* = $old_match_rule;
 
     # Add the text flows to the  import table
     push(@out_result, join("\n", @_mif_textflows, $mainflow));
@@ -2352,7 +2345,7 @@ sub _MifAddTextFlow {
     local(*text, $tag, $mif) = @_;
     local($id);
     local(@hdr, @flow);
-    local($textflow, $old_match_rule);
+    local($textflow);
 
     # Get the next text flow id
     $id = $_mif_textflow_cnt++;
@@ -2377,12 +2370,9 @@ sub _MifAddTextFlow {
     # Convert to a text flow
     if (@flow) {
         $textflow = join("\n", @flow);
-        $old_match_rule = $*;
-        $* = 1;
         $textflow =~ s/\<ParaLine/$&\n  <TextRectID $id>/;
         $textflow =~ s/\n/\n /g;
         $textflow .= "\n> # end of TextFlow";
-        $* = $old_match_rule;
     }
 
     # If nothing was generated, build the text flow with a dummy paragraph
@@ -2842,7 +2832,7 @@ sub _MifAddLists {
     local(%attr);
     local($layout);
     local($i);
-    local($old_match_rule, $toc_offset);
+    local($toc_offset);
 
     # Set some flags based on the output ultimately generated
     $target = $SDF_USER'var{'OPT_TARGET'};
@@ -2870,8 +2860,6 @@ sub _MifAddLists {
     # Insert the generated lists before the first level 1 heading
     push(@_mif_toc_list, @_mif_lof_list, @_mif_lot_list);
     if (@_mif_toc_list) {
-        $old_match_rule = $*;
-        $* = 1;
         $toc_offset = 0;
         para:
         for ($i = 0; $i <= $#text; $i++) {
@@ -2880,7 +2868,6 @@ sub _MifAddLists {
                 last para;
             }
         }
-        $* = $old_match_rule;
         splice(@text, $toc_offset, 0, @_mif_toc_list);
     }
 }
@@ -2938,15 +2925,9 @@ sub _MifMerge {
     local(*template, *import, %offset) = @_;
     local(@new);
     local($record, $obj);
-    local($old_match_rule);
     local($merged_pages, $merged_textflows, %ref_textflow);
     local($side_width);
     local($page_type, $page_name, $page_size, $cover_rect);
-    
-    # To permit multi-line matching, save the old state here and
-    # restore it later      
-    $old_match_rule = $*;
-    $* = 1;
 
     #
     # Do the merge. We ignore BookComponent objects
@@ -2963,14 +2944,14 @@ sub _MifMerge {
     while($record = shift(@template)) {
     
         # Find the object 'name'
-        unless ($record =~ /^\<(\w+)/) {
+        unless ($record =~ /^\<(\w+)/m) {
             &AppExit("fatal", "MIF template error - expecting object");
         }       
         $obj = $1;
 
         # Patch the comment to claim responsibility
         if ($obj eq 'MIFFile') {
-            $record =~ s/\>.*$/>/;
+            $record =~ s/\>.*$/>/m;
             $record .= " # Generated by $app_product_name $app_product_version";
         }
         
@@ -3030,7 +3011,6 @@ sub _MifMerge {
     }
     
     # Return result
-    $* = $old_match_rule;
     return @new;    
 }
 
diff --git a/perllib/sdf/topod.pl b/perllib/sdf/topod.pl
index f760968..81ae301 100755
--- a/perllib/sdf/topod.pl
+++ b/perllib/sdf/topod.pl
@@ -389,19 +389,11 @@ sub _PodFinalise {
 sub _PodEscape {
     local($text, $nested) = @_;
 #   local($result);
-    local($old_match_flag);
-
-    # Enable multi-line matching
-    $old_match_flag = $*;
-    $* = 1;
 
     # Escape the symbols
     my $gt = $nested ? 'E<gt>' : '>';
     $text =~ s/([A-Z])\<|\>/length($&) == 1 ? $gt : "$1E<lt>"/eg;
 
-    # Reset multi-line matching flag
-    $* = $old_match_flag;
-
     # Return result
     $text;
 }
diff --git a/perllib/sdf/tosgml.pl b/perllib/sdf/tosgml.pl
index c40935c..79f34fc 100755
--- a/perllib/sdf/tosgml.pl
+++ b/perllib/sdf/tosgml.pl
@@ -416,11 +416,6 @@ sub _SgmlFinalise {
 sub _SgmlEscape {
     local($text) = @_;
 #   local($result);
-    local($old_match_flag);
-
-    # Enable multi-line matching
-    $old_match_flag = $*;
-    $* = 1;
 
     # Escape the special symbols. Note that it isn't exactly clear
     # from the SGML-Tools and/or QWERTZ DTD documentation as to
@@ -438,9 +433,6 @@ sub _SgmlEscape {
     $text =~ s/\|/&verbar;/g;
     $text =~ s/\[/&ftag;/g;
 
-    # Reset multi-line matching flag
-    $* = $old_match_flag;
-
     # Return result
     $text;
 }
@@ -528,15 +520,10 @@ sub _SgmlAddAnchors {
     local($result);
     local($value);
     local($user_ext);
-    local($old_match_flag);
 
     # Skip this routine for now
     return 0;
 
-    # Enable multi-line matching
-    $old_match_flag = $*;
-    $* = 1;
-
     # For hypertext jumps, surround the text. If the
     # text contains a jump, the existing jump is removed.
     if ($attr{'jump'} ne '') {
@@ -572,9 +559,6 @@ sub _SgmlAddAnchors {
         $result++;
     }
 
-    # Reset multi-line matching flag
-    $* = $old_match_flag;
-
     # Return result
     return $result;
 }
